{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "NE NodeJS Rest API",
    "description": "Parking Management System API"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Vehicles",
      "description": "Vehicle management endpoints"
    },
    {
      "name": "Parking Requests",
      "description": "Parking request management endpoints"
    },
    {
      "name": "Parking Slots",
      "description": "Parking slot management endpoints"
    },
    {
      "name": "Notifications",
      "description": "Notification management endpoints"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Authenticate user and return JWT token",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/initiate-reset-password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Initiate password reset",
        "description": "Send password reset code to user's email",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "description": "Reset user password using verification code",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "example": "any"
                  },
                  "code": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/initiate-email-verification": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Initiate email verification",
        "description": "Send email verification code to user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-email/{code}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify email",
        "description": "Verify user email using verification code",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Create a new user account",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "names": {
                    "example": "any"
                  },
                  "telephone": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "role": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "description": "Update user's profile information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "names": {
                    "example": "any"
                  },
                  "telephone": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "description": "Get current user's profile information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete current user",
        "description": "Delete current user's account",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/all": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/search/{query}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/remove-avatar": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/by-id/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/update-avatar": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update-password": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "example": "any"
                  },
                  "newPassword": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/": {
      "post": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Register new vehicle",
        "description": "Register a new vehicle for the current user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/vehicles/getMyVehicles": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get user's vehicles",
        "description": "Get all vehicles registered by the current user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/vehicles/{id}": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Vehicles"
        ],
        "description": "Update vehicle by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVehicleDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Vehicles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/": {
      "post": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Create parking request",
        "description": "Create a new parking slot request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParkingRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/myRequests": {
      "get": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Get user's requests",
        "description": "Get all parking requests made by the current user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/allRequests": {
      "get": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Get all requests",
        "description": "Get all parking requests (admin only)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/approve/{id}": {
      "put": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Approve parking request",
        "description": "Approve a parking slot request (admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/reject/{id}": {
      "put": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Reject parking request",
        "description": "Reject a parking slot request (admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/{id}/exit": {
      "post": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Request to exit a parking slot",
        "description": "Allows a user to request to exit their assigned parking slot",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the parking request"
          }
        ],
        "responses": {
          "200": {
            "description": "Exit request submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Exit request submitted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Only approved slots can request exit"
          },
          "403": {
            "description": "Forbidden - Only the assigned user can request exit"
          },
          "404": {
            "description": "Request not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingRequests/{id}/exit/approve": {
      "post": {
        "tags": [
          "Parking Requests"
        ],
        "summary": "Approve a parking slot exit request",
        "description": "Allows an admin to approve a user's request to exit their parking slot and calculates the payment amount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the parking request"
          }
        ],
        "responses": {
          "200": {
            "description": "Exit request approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Exit request approved"
                    },
                    "amountToPay": {
                      "type": "number",
                      "example": 15.00,
                      "description": "Amount to be paid in dollars ($5 per hour)"
                    },
                    "slotNumber": {
                      "type": "integer",
                      "example": 1,
                      "description": "The parking slot number that was released"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Request is not in exit requested state"
          },
          "404": {
            "description": "Request not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingSlots/": {
      "get": {
        "tags": [
          "Parking Slots"
        ],
        "summary": "Get all parking slots",
        "description": "Get all parking slots (admin only)",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Parking Slots"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slotNumber": {
                    "example": "any"
                  },
                  "isAvailable": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/parkingSlots/available": {
      "get": {
        "tags": [
          "Parking Slots"
        ],
        "summary": "Get available slots",
        "description": "Get all available parking slots",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/parkingSlots/{id}": {
      "get": {
        "tags": [
          "Parking Slots"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Parking Slots"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slotNumber": {
                    "example": "any"
                  },
                  "isAvailable": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Parking Slots"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get user notifications",
        "description": "Get all notifications for the current user",
        "responses": {
          "200": {
            "description": "List of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["SLOT_REQUEST", "SLOT_APPROVED", "SLOT_REJECTED", "EXIT_REQUESTED", "EXIT_APPROVED", "PAYMENT_DUE"]
                      },
                      "message": {
                        "type": "string"
                      },
                      "isRead": {
                        "type": "boolean"
                      },
                      "metadata": {
                        "type": "object"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/{id}/read": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark notification as read",
        "description": "Mark a specific notification as read",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification marked as read"
          },
          "404": {
            "description": "Notification not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/read-all": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark all notifications as read",
        "description": "Mark all notifications for the current user as read",
        "responses": {
          "200": {
            "description": "All notifications marked as read"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "CreateVehicleDTO": {
        "type": "object",
        "properties": {
          "plateNumber": {
            "type": "string",
            "minLength": 6,
            "maxLength": 10,
            "pattern": "^RA[A-Z] \\d{3}[A-Z]$",
            "example": "RAB 123A"
          },
          "color": {
            "type": "string",
            "example": "blue"
          }
        },
        "required": ["plateNumber", "color"]
      },
      "UpdateVehicleDTO": {
        "type": "object",
        "properties": {
          "plateNumber": {
            "type": "string",
            "minLength": 6,
            "maxLength": 10,
            "pattern": "^RA[A-Z] \\d{3}[A-Z]$",
            "example": "RAB 123A"
          },
          "color": {
            "type": "string",
            "example": "red"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED"],
            "example": "APPROVED"
          }
        }
      },
      "CreateParkingRequestDTO": {
        "type": "object",
        "properties": {
          "vehicleId": {
            "type": "string",
            "example": "64fae6a7c13f0a001f1b1234"
          },
          "checkIn": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-20T08:00:00.000Z"
          },
          "checkOut": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-20T18:00:00.000Z"
          }
        },
        "required": ["vehicleId", "checkIn", "checkOut"]
      },
      "UpdateParkingRequestDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["PENDING", "APPROVED", "REJECTED"],
            "example": "APPROVED"
          },
          "parkingSlotId": {
            "type": "string",
            "example": "SLOT-A1"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}